[{"/usr/src/app/src/index.js":"1","/usr/src/app/src/App.js":"2","/usr/src/app/src/components/Stock.js":"3","/usr/src/app/src/components/Header.js":"4","/usr/src/app/src/components/Parcels.js":"5","/usr/src/app/src/reportWebVitals.js":"6"},{"size":547,"mtime":1607969885365,"results":"7","hashOfConfig":"8"},{"size":947,"mtime":1608062652732,"results":"9","hashOfConfig":"8"},{"size":3473,"mtime":1608056084249,"results":"10","hashOfConfig":"8"},{"size":514,"mtime":1608050473693,"results":"11","hashOfConfig":"8"},{"size":3726,"mtime":1608075419887,"results":"12","hashOfConfig":"8"},{"size":375,"mtime":1607725461973,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1vnfyav",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/usr/src/app/src/index.js",[],["32","33"],"/usr/src/app/src/App.js",["34"],"import React from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\"\r\nimport { Menu } from 'antd'\r\nimport Header from './components/Header'\r\nimport Stock from './components/Stock'\r\nimport Parcels from './components/Parcels'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <main>\r\n      <Router>\r\n        <div>\r\n          <Menu mode=\"horizontal\">\r\n            <Menu.Item key=\"stock_link\">\r\n              <Link to=\"/\">Stan</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"parcels_link\">\r\n              <Link to=\"/parcels\">Przesyłki</Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n\r\n          <hr />\r\n\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Stock />\r\n            </Route>\r\n            <Route path=\"/parcels\">\r\n              <Parcels />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default App\r\n","/usr/src/app/src/components/Stock.js",["35","36"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Button, Divider, Table, Form, Input, InputNumber, Space } from 'antd'\r\n\r\nconst InputQuantity = ({ productId, updateStock }) => {\r\n\r\n  const defaultValue = 1\r\n\r\n  const [availableQuantity, setAvailableQuantity] = useState(defaultValue)\r\n\r\n  const handleAvailableQuantityChange = (value) => {\r\n    setAvailableQuantity(value)\r\n  }\r\n\r\n  return (\r\n    <Form layout=\"inline\">\r\n      <Space>\r\n        <InputNumber addonAfter=\"szt.\" value={availableQuantity} onChange={handleAvailableQuantityChange} min={1}></InputNumber>\r\n        <Button shape=\"round\" onClick={() => updateStock(productId, availableQuantity)}>Dodaj</Button>\r\n      </Space>\r\n    </Form>\r\n  )\r\n}\r\n\r\nconst Stock = () => {\r\n\r\n  const [stockInfo, setStockInfo] = useState([])\r\n\r\n  const [formProductId, setFormProductId] = useState(null)\r\n  const [formAvailableQuantity, setFormAvailableQuantity] = useState(null)\r\n\r\n  const fetchStock = () => {\r\n    axios\r\n      .get(`http://localhost:8005/api/stock`)\r\n      .then(response => {\r\n        setStockInfo(response.data.stock)\r\n      })\r\n  }\r\n\r\n  useEffect(fetchStock, [])\r\n\r\n  const handleProductIdChange = (event) => {\r\n    setFormProductId(event.target.value)\r\n  }\r\n\r\n  const handleAvailableQuantityChange = (event) => {\r\n    setFormAvailableQuantity(event.target.value)\r\n  }\r\n\r\n  const updateStock = (productId, availableQuantity) => {\r\n    axios\r\n      .post(`http://localhost:8005/api/stock/updateStock?productId=${productId}&availableQuantity=${availableQuantity}`)\r\n      .then(response => {\r\n        fetchStock()\r\n      })\r\n  }\r\n\r\n  const setStock = () => {\r\n    axios\r\n      .post(`http://localhost:8005/api/stock/setStock?productId=${formProductId}&availableQuantity=${formAvailableQuantity}`)\r\n      .then(response => {\r\n        fetchStock()\r\n      })\r\n  }\r\n\r\n  const removeAllStock = () => {\r\n    axios\r\n      .delete(`http://localhost:8005/api/stock/deleteAll`)\r\n      .then(response => {\r\n        setStockInfo([])\r\n      })\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'ID',\r\n      dataIndex: 'productId',\r\n      key: 'productId',\r\n      render: text => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: 'Dostępna ilość',\r\n      key: 'availableQuantity',\r\n      dataIndex: 'availableQuantity',\r\n      render: text => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: 'Dodaj ilość',\r\n      key: 'addQuantityInput',\r\n      dataIndex: 'productId',\r\n      render: productId => <InputQuantity productId={productId} updateStock={updateStock} />,\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n\r\n      <Form\r\n        layout={\"inline\"}\r\n      // form={form}\r\n      // initialValues={{ layout: formLayout }}\r\n      // onValuesChange={onFormLayoutChange}\r\n      >\r\n        <Form.Item label=\"ID produktu\">\r\n          <Input placeholder=\"1\" onChange={handleProductIdChange} />\r\n        </Form.Item>\r\n        <Form.Item label=\"Ilość (szt.)\">\r\n          <Input placeholder=\"4\" onChange={handleAvailableQuantityChange} />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" onClick={setStock}>Zapisz</Button>\r\n        </Form.Item>\r\n      </Form>\r\n      <Divider />\r\n      <Button danger type=\"primary\" onClick={() => removeAllStock()}>Usuń wszystko</Button>\r\n      <Divider orientation=\"left\">Aktualny stan magazynowy</Divider>\r\n      <Table columns={columns} dataSource={stockInfo} rowKey={stockInfo => stockInfo._id} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Stock\r\n\r\n",["37","38"],"/usr/src/app/src/components/Header.js",["39","40"],"import React, { useState, useEffect } from 'react'\r\nimport { Menu } from 'antd'\r\n\r\nconst Header = () => {\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Menu mode=\"horizontal\">\r\n        <Menu.Item key=\"wh_name\">\r\n          Magazyn 1\r\n        </Menu.Item>\r\n        <Menu.Item key=\"stock\">\r\n          <a href=\"./Stock.js\">Stan magazynowy</a>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"app\" >\r\n          <a href=\"./Parcels.js\">Przesyłki</a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header\r\n\r\n\r\n","/usr/src/app/src/components/Parcels.js",["41","42","43","44","45","46","47","48","49"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Button, Divider, Table, Form, Input, InputNumber, Space, List } from 'antd'\r\n\r\nconst ParcelSettings = ({ parcelId, status, confirmParcelArrival }) => {\r\n\r\n  if (status == \"in_shipping\") {\r\n    return (\r\n      <>\r\n        <Button onClick={() => confirmParcelArrival(parcelId)} >Potwierdź otrzymanie</Button>\r\n      </>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n      <>\r\n        Dostarczono\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n}\r\n\r\nconst Parcels = () => {\r\n\r\n  const [parcelsInfo, setParcelsInfo] = useState([])\r\n\r\n  // const [formProductId, setFormProductId] = useState(null)\r\n  // const [formAvailableQuantity, setFormAvailableQuantity] = useState(null)\r\n\r\n  const fetchParcels = () => {\r\n    axios\r\n      .get(`http://localhost:8005/api/parcels`)\r\n      .then(response => {\r\n        setParcelsInfo(response.data.parcel)\r\n      })\r\n  }\r\n\r\n  useEffect(fetchParcels, [])\r\n\r\n  const confirmParcelArrival = (parcelId) => {\r\n    axios\r\n      .post(`http://localhost:8005/api/parcels/confirmArrival?parcelId=${parcelId}`)\r\n      .then(response => {\r\n        \r\n      })\r\n      fetchParcels()\r\n  }\r\n\r\n  // const handleProductIdChange = (event) => {\r\n  //   setFormProductId(event.target.value)\r\n  // }\r\n\r\n  // const handleAvailableQuantityChange = (event) => {\r\n  //   setFormAvailableQuantity(event.target.value)\r\n  // }\r\n\r\n  // const updateStock = (productId, availableQuantity) => {\r\n  //   axios\r\n  //     .post(`http://localhost:8005/api/stock/updateStock?productId=${productId}&availableQuantity=${availableQuantity}`)\r\n  //     .then(response => {\r\n  //       fetchStock()\r\n  //     })\r\n  // }\r\n\r\n  // const setStock = () => {\r\n  //   axios\r\n  //     .post(`http://localhost:8005/api/stock/setStock?productId=${formProductId}&availableQuantity=${formAvailableQuantity}`)\r\n  //     .then(response => {\r\n  //       fetchStock()\r\n  //     })\r\n  // }\r\n\r\n  // const removeAllStock = () => {\r\n  //   axios\r\n  //     .delete(`http://localhost:8005/api/stock/deleteAll`)\r\n  //     .then(response => {\r\n  //       setStockInfo([])\r\n  //     })\r\n  // }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Nadawca',\r\n      dataIndex: 'sender',\r\n      key: 'sender',\r\n      render: text => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: 'Szczegóły',\r\n      dataIndex: 'parcelSettings',\r\n      key: 'sender',\r\n      render: (text, row) => <ParcelSettings parcelId={row._id} status={row.status} confirmParcelArrival={confirmParcelArrival} />,\r\n    },\r\n    // {\r\n    //   title: 'Dostępna ilość',\r\n    //   key: 'availableQuantity',\r\n    //   dataIndex: 'availableQuantity',\r\n    //   render: text => <a>{text}</a>,\r\n    // },\r\n    // {\r\n    //   title: 'Dodaj ilość',\r\n    //   key: 'addQuantityInput',\r\n    //   dataIndex: 'productId',\r\n    //   render: productId => <InputQuantity productId={productId} updateStock={updateStock} />,\r\n    // }\r\n  ]\r\n\r\n  const subColumns = [\r\n    {\r\n      title: 'Produkt',\r\n      dataIndex: 'productId',\r\n      key: 'productId',\r\n      render: text => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: 'Ilość',\r\n      dataIndex: 'quantity',\r\n      key: 'quantity',\r\n      render: text => <a>{text}</a>,\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <Divider orientation=\"left\">Przesyłki w tranzycie</Divider>\r\n      <Table columns={columns} dataSource={parcelsInfo} rowKey={parcelsInfo => parcelsInfo._id}\r\n        expandable={{\r\n          expandedRowRender: products => {\r\n            return <Table\r\n              size=\"small\"\r\n              columns={subColumns}\r\n              dataSource={products.products}\r\n              pagination=\"none\"\r\n            />\r\n          }\r\n        }}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Parcels\r\n\r\n","/usr/src/app/src/reportWebVitals.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":9,"column":8,"nodeType":"56","messageId":"57","endLine":9,"endColumn":14},{"ruleId":"58","severity":1,"message":"59","line":79,"column":23,"nodeType":"60","endLine":79,"endColumn":26},{"ruleId":"58","severity":1,"message":"59","line":85,"column":23,"nodeType":"60","endLine":85,"endColumn":26},{"ruleId":"50","replacedBy":"61"},{"ruleId":"52","replacedBy":"62"},{"ruleId":"54","severity":1,"message":"63","line":1,"column":17,"nodeType":"56","messageId":"57","endLine":1,"endColumn":25},{"ruleId":"54","severity":1,"message":"64","line":1,"column":27,"nodeType":"56","messageId":"57","endLine":1,"endColumn":36},{"ruleId":"54","severity":1,"message":"65","line":3,"column":34,"nodeType":"56","messageId":"57","endLine":3,"endColumn":38},{"ruleId":"54","severity":1,"message":"66","line":3,"column":40,"nodeType":"56","messageId":"57","endLine":3,"endColumn":45},{"ruleId":"54","severity":1,"message":"67","line":3,"column":47,"nodeType":"56","messageId":"57","endLine":3,"endColumn":58},{"ruleId":"54","severity":1,"message":"68","line":3,"column":60,"nodeType":"56","messageId":"57","endLine":3,"endColumn":65},{"ruleId":"54","severity":1,"message":"69","line":3,"column":67,"nodeType":"56","messageId":"57","endLine":3,"endColumn":71},{"ruleId":"70","severity":1,"message":"71","line":7,"column":14,"nodeType":"72","messageId":"73","endLine":7,"endColumn":16},{"ruleId":"58","severity":1,"message":"59","line":88,"column":23,"nodeType":"60","endLine":88,"endColumn":26},{"ruleId":"58","severity":1,"message":"59","line":115,"column":23,"nodeType":"60","endLine":115,"endColumn":26},{"ruleId":"58","severity":1,"message":"59","line":121,"column":23,"nodeType":"60","endLine":121,"endColumn":26},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["74"],["75"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'InputNumber' is defined but never used.","'Space' is defined but never used.","'List' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]